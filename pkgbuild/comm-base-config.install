#!/usr/bin/env bash
# -*- coding: utf-8 -*-
# shellcheck shell=bash disable=SC1091,SC2039,SC2166
#
#  comm-base-config.install
#  Created: 2025/01/30 - 20:23
#  Altered: 2025/01/30 - 20:23
#
#  Copyright (c) 2025-2025, Vilmar Catafesta <vcatafesta@gmail.com>
#  All rights reserved.
#
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions
#  are met:
#  1. Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#  2. Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR AS IS'' AND ANY EXPRESS OR
#  IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
#  OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
#  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
#  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
#  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
#  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
#  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
#  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
#  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
##############################################################################

# Function executed before package installation
# pre_install() {
#     echo "Preparing to install the package..."
    # Example: Check for system dependencies
    # if ! command -v required_command &> /dev/null; then
    #     echo "Error: required_command not found. Please install it before continuing."
    #     exit 1
    # fi
# }

post_install() {
  local pkgname=comm-base-config
  echo "Configuring the package after installation..."

	# Copiar a estrutura para os diretórios de destino
	local dirs=("usr" "etc" "opt")

	for dir in "${dirs[@]}"; do
		if [ -d "/usr/share/${pkgname}/${dir}" ]; then
			# Copiar os arquivos e subdiretórios de /usr/share/${pkgname}/${dir} para o sistema
			echo "Copiando /usr/share/${pkgname}/${dir} para /"
			cp -a "/usr/share/${pkgname}/${dir}" "/"
		fi
	done

  # Sobrescreve o arquivo plymouthd.conf com a versão do pacote
  cp -af /usr/lib/manjaro-tools/util-live.sh /usr/lib/manjaro-tools/util-live.sh.pacnew
  cp -af /usr/lib/manjaro-tools/util-live.sh.community /usr/lib/manjaro-tools/util-live.sh
  cp -af /usr/share/${pkgname}/usr/lib/manjaro-tools/util-live.sh.community /usr/lib/manjaro-tools/util-live.sh
  chmod +x /usr/lib/manjaro-tools/util-live.sh
}

# Function executed before package upgrade
# pre_upgrade() {
#     echo "Preparing to upgrade the package..."
    # Example: Backup configuration files
    # cp /etc/mypackage/config.conf /etc/mypackage/config.conf.bak
# }

post_upgrade() {
  echo "Finalizing package upgrade..."
  post_install
}

# Function executed before package removal
# pre_remove() {
#     echo "Preparing to remove the package..."
    # Example: Stop services
    # systemctl stop myservice.service
    # systemctl disable myservice.service
# }

# Function executed after package removal
# post_remove() {
#     echo "Cleaning up after package removal..."
    # Example: Remove data directories created by the package
    # rm -rf /var/lib/mypackage

#     echo "If you want to remove all user data, run:"
#     echo "rm -rf /home/*/mypackage_data"
# }
